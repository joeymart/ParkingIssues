<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_pir.EmployeeCar</api_name>
        <client_callable>false</client_callable>
        <description/>
        <name>EmployeeCar</name>
        <script><![CDATA[var EmployeeCar = Class.create();
EmployeeCar.prototype = {
    initialize: function() {},

    find: function(licenseplate, color, make, model) {
        var grEC = new GlideRecordSecure('x_pir_employee_car');
        grEC.addQuery('license_plate_number', licenseplate);
        grEC.query();
        if (grEC.next()) {
            return grEC;
        } else if (gs.getProperty('x_pir.issue.create_car_if_not_found') && make != 'undefined' && model != 'undefined') {

            var getNewCar = this.buildCar(make, model);

            if (licenseplate) {
                var carfound = this.makeEC(getNewCar, color, licenseplate);
                return carfound;
            } else
                return null;
        }
    },

    buildCar: function(make, model) {
        var grCarin = new GlideRecordSecure('x_pir_car');
        grCarin.addQuery('make', make);
        grCarin.addQuery('model', model);
        grCarin.query();
        if (grCarin.next()) {
            return grCarin;
        } else {
            var grCarNew = new GlideRecordSecure('x_pir_car');
            grCarNew.initialize();
            grCarNew.setValue('model', model);
            grCarNew.setValue('make', make);
            grCarNew.insert();
            return grCarNew;
        }
    },

    makeEC: function(getNewCar, color, license_plate) {
        var grECin = new GlideRecordSecure('x_pir_employee_car');
        grECin.initialize();
        grECin.setValue('car', getNewCar.sys_id, getNewCar.license_plate);
        if (color != 'undefined')
            grECin.setValue('color', color);
        if (license_plate != 'undefined') {
            grECin.setValue('license_plate_number', license_plate);
        } else
            grECin.setValue('license_plate_number', '');
        grECin.insert();
        return grECin;

    },

    type: 'EmployeeCar'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-04-23 06:23:29</sys_created_on>
        <sys_id>2c921acf41615300964f4ce15a880665</sys_id>
        <sys_mod_count>66</sys_mod_count>
        <sys_name>EmployeeCar</sys_name>
        <sys_package display_value="Parking Issues" source="x_pir">2bc7b833673212008db1bcb532415a9d</sys_package>
        <sys_policy>protected</sys_policy>
        <sys_scope display_value="Parking Issues">2bc7b833673212008db1bcb532415a9d</sys_scope>
        <sys_update_name>sys_script_include_2c921acf41615300964f4ce15a880665</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-08-28 16:59:33</sys_updated_on>
    </sys_script_include>
</record_update>
